{"version":3,"file":"ClientApp_Components_advent_challenges_AdventChallengeDay1b_tsx.clientbundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA,SAASE,oBAAT,GAAgC;AAC9B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD;AAAA,WAClBA,SAAS,CAACC,MAAV,CACE,UAACC,GAAD,EAAMC,CAAN,EAASC,CAAT;AAAA,aACGF,GAAG,IACFF,SAAS,CAACI,CAAD,CAAT,GAAeJ,SAAS,CAACI,CAAC,GAAG,CAAL,CAAxB,GAAkCJ,SAAS,CAACI,CAAC,GAAG,CAAL,CAA3C,GACAJ,SAAS,CAACI,CAAC,GAAG,CAAL,CAAT,GAAmBJ,SAAS,CAACI,CAAC,GAAG,CAAL,CAA5B,GAAsCJ,SAAS,CAACI,CAAC,GAAG,CAAL,CAD/C,GAEI,CAFJ,GAGI,CALR;AAAA,KADF,EAOE,CAPF,CADkB;AAAA,GAApB;;AAWA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,sBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAG,aAAS,EAAC;AAAb,KAA+BP,uEAAA,CAAoB,IAApB,CAA/B,CADF,CAFF,CADF,eAOE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,yBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAG,aAAS,EAAC;AAAb,gCACY,4DAAIE,WAAW,CAACF,kEAAD,CAAf,CADZ,iIADF,CAFF,CAPF,eAiBE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,aADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,ySADF,CAFF,CAjBF,eAkCE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,yBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,kBACE,+JADF,eAKE,mbALF,eAaE,iKAGE,gEAHF,CAbF,eAkBE,0EACE,0EACE,qKAE2C,GAF3C,CADF,CADF,CAlBF,CADF,CAFF,CAlCF,CADF;AAqED;;AAED,iEAAeC,oBAAf","sources":["webpack://rm-react-dashboard-app/./ClientApp/Components/advent/challenges/AdventChallengeDay1b.tsx"],"sourcesContent":["import React from \"react\";\nimport \"../Advent.scss\";\nimport { adventDay1Data } from \"../data/AdventDataSource\";\n\nfunction AdventChallengeDay1b() {\n  const solvePuzzle = (inputData: number[]) =>\n    inputData.reduce(\n      (acc, v, i) =>\n        (acc +=\n          inputData[i] + inputData[i + 1] + inputData[i + 2] <\n          inputData[i + 1] + inputData[i + 2] + inputData[i + 3]\n            ? 1\n            : 0),\n      0\n    );\n\n  return (\n    <div className=\"flex-fill\">\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Problem Input:</h5>\n        <div className=\"px-3 small\">\n          <p className=\"small data-box\">{adventDay1Data.join(\", \")}</p>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Problem Solution:</h5>\n        <div className=\"px-3\">\n          <p className=\"color-code-green\">\n            There are <b>{solvePuzzle(adventDay1Data)}</b> larger \"window\"\n            measurements when grouping the data by 3 concurrent data points\n            instead of checking each item separately.\n          </p>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column mb-3\">\n        <h5 className=\"mb-2\">Code:</h5>\n        <div className=\"px-3\">\n          <pre className=\"color-code-green small code mb-0\">\n            {`const solvePuzzle = (inputData: number[]) =>\n    inputData.reduce(\n      (acc, v, i) =>\n        (acc +=\n          inputData[i] + inputData[i + 1] + inputData[i + 2] <\n          inputData[i + 1] + inputData[i + 2] + inputData[i + 3]\n            ? 1\n            : 0),\n      0\n    );`}\n          </pre>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Code Explanation:</h5>\n        <div className=\"px-3\">\n          <ul className=\"color-code-green small mb-0\">\n            <li>\n              Take in input array as :number[]. I took the data from the advent\n              website and stored it as json\n            </li>\n            <li>\n              Use Array.prototype.reduce() to use built-in functionality to add\n              to the accumulated int if the sum of the first \"window\" aka 3\n              concurrent data points for ex. A (151, 152, 153) was less than the\n              sum of the second \"window\" one index to the right B (152, 153,\n              158). In this example it is clear that the sum of A is less than B\n              so that \"window is marked as an increase!\n            </li>\n            <li>\n              This code only loops once through the array making this solution\n              in Big O notation:\n              <b>N</b>\n            </li>\n            <ul>\n              <li>\n                <i>\n                  This is with an assumption that the Array.prototype.reduce()\n                  function doesn't do any extra iterating.{\" \"}\n                </i>\n              </li>\n            </ul>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdventChallengeDay1b;\n"],"names":["React","adventDay1Data","AdventChallengeDay1b","solvePuzzle","inputData","reduce","acc","v","i","join"],"sourceRoot":""}