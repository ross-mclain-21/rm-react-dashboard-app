{"version":3,"file":"ClientApp_Components_advent_challenges_AdventChallengeDay2a_tsx.clientbundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;AAEA,SAASE,oBAAT,GAAgC;AAC9B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAkC;AACpD,QAAIC,kBAA0B,GAAG,CAAjC;AACA,QAAIC,KAAa,GAAG,CAApB;AAEAF,IAAAA,SAAS,CAACG,OAAV,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAQD,CAAC,CAACE,OAAV;AACE,aAAK,SAAL;AACEL,UAAAA,kBAAkB,IAAIG,CAAC,CAACG,KAAxB;AACA;;AACF,aAAK,IAAL;AACEL,UAAAA,KAAK,IAAIE,CAAC,CAACG,KAAX;AACA;;AACF,aAAK,MAAL;AACEL,UAAAA,KAAK,IAAIE,CAAC,CAACG,KAAX;AACA;AATJ;AAWD,KAZD;AAcA,WAAO,CAACN,kBAAD,EAAqBC,KAArB,CAAP;AACD,GAnBD;;AAqBA,qBAAoCH,WAAW,CAACF,kEAAD,CAA/C;AAAA;AAAA,MAAOI,kBAAP;AAAA,MAA2BC,KAA3B;;AACA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,sBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAG,aAAS,EAAC;AAAb,KACGL,sEAAA,CACM,UAACY,KAAD;AAAA,sBAAeA,KAAK,CAACH,OAArB,cAAgCG,KAAK,CAACF,KAAtC;AAAA,GADN,EAEEG,IAFF,CAEO,IAFP,CADH,CADF,CAFF,CADF,eAWE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,yBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAG,aAAS,EAAC;AAAb,sEACgE,GADhE,EAEGT,kBAFH,yBAE0CC,KAF1C,qDAGkB,4DAAID,kBAAkB,GAAGC,KAAzB,CAHlB,MADF,CAFF,CAXF,eAqBE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,aADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,2eADF,CAFF,CArBF,eA8CE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,yBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,kBACE,kHADF,eAEE,+HAFF,eAKE,iKAGE,gEAHF,CALF,CADF,CAFF,CA9CF,CADF;AAiED;;AAED,iEAAeJ,oBAAf","sources":["webpack://rm-react-dashboard-app/./ClientApp/Components/advent/challenges/AdventChallengeDay2a.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport \"../Advent.scss\";\nimport AdventContext from \"../AdventContext\";\nimport { adventDay2Data, IAdventDay2Data } from \"../data/AdventDataSource\";\n\nfunction AdventChallengeDay1b() {\n  const solvePuzzle = (inputData: IAdventDay2Data[]) => {\n    let horizontalPosition: number = 0;\n    let depth: number = 0;\n\n    inputData.forEach((v, i) => {\n      switch (v.command) {\n        case \"forward\":\n          horizontalPosition += v.delta;\n          break;\n        case \"up\":\n          depth -= v.delta;\n          break;\n        case \"down\":\n          depth += v.delta;\n          break;\n      }\n    });\n\n    return [horizontalPosition, depth];\n  };\n\n  const [horizontalPosition, depth] = solvePuzzle(adventDay2Data);\n  return (\n    <div className=\"flex-fill\">\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Problem Input:</h5>\n        <div className=\"px-3 small\">\n          <p className=\"small data-box\">\n            {adventDay2Data\n              .map((value) => `{${value.command}:${value.delta}}`)\n              .join(\", \")}\n          </p>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Problem Solution:</h5>\n        <div className=\"px-3\">\n          <p className=\"color-code-green\">\n            After running the commands given, the horizontal position is:{\" \"}\n            {horizontalPosition} and the depth is: {depth}. When multiplied\n            together we get <b>{horizontalPosition * depth}</b>.\n          </p>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column mb-3\">\n        <h5 className=\"mb-2\">Code:</h5>\n        <div className=\"px-3\">\n          <pre className=\"color-code-green small code mb-0\">{`const solvePuzzle = (inputData: IAdventDay2Data[]) => {\n    let horizontalPosition: number = 0;\n    let depth: number = 0;\n\n    inputData.forEach((v, i) => {\n      switch (v.command) {\n        case \"forward\":\n          horizontalPosition += v.delta;\n          break;\n        case \"up\":\n          depth -= v.delta;\n          break;\n        case \"down\":\n          depth += v.delta;\n          break;\n      }\n    });\n\n    return [horizontalPosition, depth];\n  };`}</pre>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Code Explanation:</h5>\n        <div className=\"px-3\">\n          <ul className=\"color-code-green small code mb-0\">\n            <li>Take in input array as :{`<string,number>[]`}.</li>\n            <li>\n              Loop over each command and add forward or up/down to the depth.\n            </li>\n            <li>\n              This code only loops once through the array making this solution\n              in Big O notation:\n              <b>N</b>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdventChallengeDay1b;\n"],"names":["React","adventDay2Data","AdventChallengeDay1b","solvePuzzle","inputData","horizontalPosition","depth","forEach","v","i","command","delta","map","value","join"],"sourceRoot":""}