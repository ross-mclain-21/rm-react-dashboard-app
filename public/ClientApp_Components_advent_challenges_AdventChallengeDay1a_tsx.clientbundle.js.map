{"version":3,"file":"ClientApp_Components_advent_challenges_AdventChallengeDay1a_tsx.clientbundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA,SAASG,oBAAT,GAAgC;AAAA;;AAC9B,oBAA+BF,iDAAU,CAACC,sDAAD,CAAzC;AAAA,MAAQE,kBAAR,eAAQA,kBAAR;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD;AAAA,WAClBA,SAAS,CAACC,MAAV,CAAiB,UAACC,GAAD,EAAMC,CAAN,EAASC,CAAT;AAAA,aAAgBF,GAAG,IAAIC,CAAC,GAAGH,SAAS,CAACI,CAAC,GAAG,CAAL,CAAb,GAAuB,CAAvB,GAA2B,CAAlD;AAAA,KAAjB,EAAuE,CAAvE,CADkB;AAAA,GAApB;;AAGA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,yBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAG,aAAS,EAAC;AAAb,gCACY,4DAAIL,WAAW,0BAACD,kBAAD,aAACA,kBAAD,uBAACA,kBAAkB,CAAEO,KAArB,yEAA8B,EAA9B,CAAf,CADZ,EACkE,GADlE,gEADF,CAFF,CADF,eAUE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,aADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,oIADF,CAFF,CAVF,eAmBE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,yBADF,eAEE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAI,aAAS,EAAC;AAAd,kBACE,+JADF,eAKE,2MALF,eAUE,iKAGE,gEAHF,CAVF,eAeE,0EACE,0EACE,qKAE2C,GAF3C,CADF,CADF,CAfF,CADF,CAFF,CAnBF,CADF;AAmDD;;AAED,iEAAeR,oBAAf","sources":["webpack://rm-react-dashboard-app/./ClientApp/Components/advent/challenges/AdventChallengeDay1a.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport \"../Advent.scss\";\nimport AdventContext from \"../AdventContext\";\n\nfunction AdventChallengeDay1a() {\n  const { selectedAdventData } = useContext(AdventContext);\n\n  const solvePuzzle = (inputData: number[]) =>\n    inputData.reduce((acc, v, i) => (acc += v < inputData[i + 1] ? 1 : 0), 0);\n\n  return (\n    <div className=\"flex-fill\">\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Problem Solution:</h5>\n        <div className=\"px-3\">\n          <p className=\"color-code-green\">\n            There are <b>{solvePuzzle(selectedAdventData?.input ?? [])}</b>{\" \"}\n            measurements that are larger than the previous measurement.\n          </p>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column mb-3\">\n        <h5 className=\"mb-2\">Code:</h5>\n        <div className=\"px-3\">\n          <pre className=\"color-code-green small code mb-0\">\n            {`const solvePuzzle = (inputData: number[]) =>\n    inputData.reduce((acc, v, i) => (acc += v < inputData[i + 1] ? 1 : 0), 0);`}\n          </pre>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <h5 className=\"mb-2\">Code Explanation:</h5>\n        <div className=\"px-3\">\n          <ul className=\"color-code-green small code mb-0\">\n            <li>\n              Take in input array as :number[]. I took the data from the advent\n              website and stored it as json\n            </li>\n            <li>\n              Use Array.prototype.reduce() to use built-in functionality to add\n              to the accumulated int if value is less than the next value in the\n              array.\n            </li>\n            <li>\n              This code only loops once through the array making this solution\n              in Big O notation:\n              <b>N</b>\n            </li>\n            <ul>\n              <li>\n                <i>\n                  This is with an assumption that the Array.prototype.reduce()\n                  function doesn't do any extra iterating.{\" \"}\n                </i>\n              </li>\n            </ul>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdventChallengeDay1a;\n"],"names":["React","useContext","AdventContext","AdventChallengeDay1a","selectedAdventData","solvePuzzle","inputData","reduce","acc","v","i","input"],"sourceRoot":""}